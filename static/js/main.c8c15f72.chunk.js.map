{"version":3,"sources":["components/CustomizeTheme/config.js","components/CustomizeTheme/index.jsx","components/ListExercise/index.jsx","components/ExerciseAction/index.jsx","components/App.js","serviceWorker.js","index.js"],"names":["customizes","title","name","datas","label","value","blue","pink","orange","green","yellow","useStyles","makeStyles","theme","customize","display","justifyContent","marginBottom","spacing","marginTop","formControl","minWidth","handleChange","classes","useState","color","type","size","state","setState","onChange","e","target","useEffect","className","map","index","FormControl","key","InputLabel","Select","data","option","MenuItem","exercises","handleDeleteExercise","List","exercise","ListItem","ListItemText","primary","exerciseTitle","ListItemIcon","IconButton","onClick","id","exerciseAction","exerciseActionBtn","form","formInput","flex","marginRight","formBtnSubmit","white","handleCreate","setTitle","errors","setErrors","onSubmit","preventDefault","trim","length","TextField","margin","error","helperText","onFocus","Button","variant","container","maxWidth","padding","App","setExercises","themeValue","setThemeValue","createMuiTheme","palette","ThemeProvider","Paper","Typography","align","gutterBottom","CustomizeTheme","ExerciseAction","Date","now","ListExercise","filter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c8c15f72.chunk.js","sourcesContent":["import blue from '@material-ui/core/colors/blue';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport const customizes = [\r\n  {\r\n    title: 'Theme Color',\r\n    name: 'color',\r\n    datas: [\r\n      { label: 'Blue', value: blue },\r\n      { label: 'Pink', value: pink },\r\n      { label: 'Orange', value: orange },\r\n      { label: 'Green', value: green },\r\n      { label: 'Yellow', value: yellow },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Theme Type',\r\n    name: 'type',\r\n    datas: [\r\n      { label: 'Dart Theme', value: 'dark' },\r\n      { label: 'light Theme', value: 'light' },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Theme Spacing',\r\n    name: 'size',\r\n    datas: [\r\n      { label: '8', value: 8 },\r\n      { label: '16', value: 16 },\r\n      { label: '24', value: 24 },\r\n      { label: '32', value: 32 },\r\n      { label: '40', value: 40 },\r\n      { label: '48', value: 48 },\r\n      { label: '56', value: 56 },\r\n    ],\r\n  },\r\n];\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\n\r\n// MUI stuff\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { customizes } from './config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  customize: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ({ handleChange }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    color: pink,\r\n    type: 'light',\r\n    size: 8,\r\n  });\r\n\r\n  const onChange = (e) =>\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n\r\n  useEffect(() => {\r\n    handleChange(state);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  const showCustomizes = () => (\r\n    <Fragment>\r\n      {customizes.map((customize, index) => {\r\n        const value =\r\n          customize.name === 'color'\r\n            ? state.color\r\n            : customize.name === 'type'\r\n            ? state.type\r\n            : state.size;\r\n        return (\r\n          <FormControl key={index} className={classes.formControl}>\r\n            <InputLabel>{customize.title}</InputLabel>\r\n            <Select name={customize.name} value={value} onChange={onChange}>\r\n              {customize.datas.map((data, option) => (\r\n                <MenuItem key={option} value={data.value}>\r\n                  {data.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n\r\n  return <div className={classes.customize}>{showCustomizes()}</div>;\r\n}\r\n","import React from 'react';\r\n\r\n// MUI stuff\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\n// Icons\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  exercises: {},\r\n}));\r\n\r\nexport default function ({ exercises, handleDeleteExercise }) {\r\n  const classes = useStyles();\r\n  const handleDelete = (id) => handleDeleteExercise(id);\r\n  return (\r\n    <List className={classes.exercises}>\r\n      {exercises.map((exercise, index) => (\r\n        <ListItem key={index} className={classes.exercise}>\r\n          <ListItemText\r\n            primary={exercise.title}\r\n            className={classes.exerciseTitle}\r\n          />\r\n          <ListItemIcon>\r\n            <IconButton\r\n              color=\"primary\"\r\n              onClick={() => handleDelete(exercise.id)}\r\n              className={classes.exerciseAction}\r\n            >\r\n              <DeleteIcon className={classes.exerciseActionBtn} />\r\n            </IconButton>\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\n// MUI stuff\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport white from '@material-ui/core/colors/amber';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  formInput: {\r\n    flex: '1',\r\n    marginRight: 24,\r\n  },\r\n  formBtnSubmit: {\r\n    color: white,\r\n  },\r\n}));\r\n\r\nexport default function ({ handleCreate }) {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState('');\r\n  const [errors, setErrors] = useState({\r\n    title: null,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title && title.trim('').length > 0) {\r\n      handleCreate(title);\r\n      setTitle('');\r\n    } else {\r\n      setErrors({\r\n        title: 'Must not be empty',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => setTitle(e.target.value);\r\n\r\n  const handleForcus = () => {\r\n    setErrors({ title: null });\r\n    setTitle('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.form}>\r\n      <TextField\r\n        name=\"title\"\r\n        label=\"Exercises\"\r\n        value={title}\r\n        onChange={handleChange}\r\n        margin=\"none\"\r\n        className={classes.formInput}\r\n        error={errors.title ? true : false}\r\n        helperText={errors.title}\r\n        onFocus={handleForcus}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        className={classes.formBtnSubmit}\r\n      >\r\n        Create\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\n// MUI stuff\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport pink from '@material-ui/core/colors/pink';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n// components\nimport CustomizeTheme from './CustomizeTheme/index';\nimport ListExercise from './ListExercise/index';\nimport ExerciseAction from './ExerciseAction/index';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    maxWidth: 600,\n    margin: '100px auto',\n    padding: theme.spacing(4),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [exercises, setExercises] = useState([]);\n  const [themeValue, setThemeValue] = useState({\n    color: pink,\n    type: 'light',\n    size: 8,\n  });\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: themeValue.color,\n      type: themeValue.type,\n    },\n    spacing: themeValue.size,\n  });\n\n  const handleCreate = (title) => {\n    setExercises([...exercises, { title, id: Date.now() }]);\n  };\n  const handleDelete = (id) => {\n    setExercises(exercises.filter((exercise) => exercise.id !== id));\n  };\n\n  const handleChange = (themeValue) => setThemeValue(themeValue);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className={classes.container}>\n        <Typography variant=\"h3\" align=\"center\" gutterBottom>\n          Exercises\n        </Typography>\n        <CustomizeTheme handleChange={handleChange} />\n        <ExerciseAction handleCreate={handleCreate} />\n        <ListExercise\n          exercises={exercises}\n          handleDeleteExercise={handleDelete}\n        />\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'typeface-roboto';\n\n// MUI stuff\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport blue from '@material-ui/core/colors/blue';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}